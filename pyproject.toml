[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "modern-ml-pipeline"
version = "0.2.0"
description = "A modern, configuration-driven ML pipeline for multiple models."
readme = "README.md"
requires-python = ">=3.10, <4.0"
authors = [
  { name = "wesley", email = "weslery@socar.kr" },
]
dependencies = [
    "typer",
    "uvicorn",
    "fastapi",
    "pydantic",
    "python-dotenv",
    "PyYAML",
    "pandas",
    "scikit-learn",
    "mlflow",
    "causalml",
    "xgboost",
    # 🔧 Python 3.11 호환성을 위한 명시적 버전 지정
    "shap>=0.48.0",
    "numba>=0.60.0",
    "llvmlite>=0.43.0",
    # 🆕 Blueprint v17.0: 자동화된 하이퍼파라미터 최적화
    "optuna>=3.4.0",
    # 🆕 다양한 모델 생태계 지원
    "catboost>=1.2.0",
    "lightgbm>=4.1.0",
    # 🆕 Feast Feature Store 완전 지원
    "feast>=0.35.0",
    "google-cloud-bigquery",
    "google-cloud-storage",
    "pyarrow",
    "db-dtypes",
    "jinja2",
    "sqlparse",
    "s3fs",
    "boto3",
    "redis",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pre-commit",
    "ruff",
    "mypy",
    "ipykernel",
    "httpx",
]

[project.scripts]
cli = "main:app"

# 🆕 패키지 경로 명시 (빌드 오류 해결)
[tool.hatch.build.targets.wheel]
packages = ["src", "serving"]
include = ["main.py", "config", "recipes"]

[tool.hatch.scripts]
train = "python main.py train --recipe-file xgboost_x_learner"
serve = "python main.py serve-api --run-id YOUR_RUN_ID"
test = "pytest"
lint = "ruff check . && mypy ."

