# Ridge Regression - L2 정규화를 통한 안정적인 선형 회귀
# 📈 과적합 방지와 안정성을 제공하는 정규화된 선형 회귀

name: "ridge_regression"

model:
  # 직접 동적 import를 통한 Ridge Regression 회귀기
  class_path: "sklearn.linear_model.Ridge"
  
  # 하이퍼파라미터 정의 (Optuna 자동 최적화 지원)
  hyperparameters:
    # 🔥 자동 최적화 범위 - Ridge Regression 특화 하이퍼파라미터
    alpha: {type: "float", low: 0.001, high: 1000.0, log: true}
    fit_intercept: {type: "categorical", choices: [true, false]}
    solver: {type: "categorical", choices: ["auto", "svd", "cholesky", "lsqr", "sparse_cg", "sag", "saga"]}
    positive: {type: "categorical", choices: [true, false]}
    
    # 🔧 고정값 - Ridge Regression 안정성을 위한 설정
    random_state: 42
    max_iter: 1000

  # 하이퍼파라미터 튜닝 설정
  hyperparameter_tuning:
    enabled: true
    n_trials: 60  # Ridge는 alpha 값이 중요하므로 충분한 탐색
    metric: "neg_mean_squared_error"
    direction: "maximize"

  # 데이터 로더 정의 (Spine 생성)
  loader:
    name: "regression_loader"
    source_uri: "recipes/sql/loaders/user_features.sql"

  # 피처 증강 정의 (Feature Store 기반)
  augmenter:
    type: "feature_store"
    features:
      # 사용자 기본 정보 피처
      - feature_namespace: "user_demographics"
        features: ["age", "country_code"]
      
      # 사용자 구매 이력 피처  
      - feature_namespace: "user_purchase_summary"
        features: ["ltv", "total_purchase_count", "last_purchase_date"]
      
      # 상품 상세 정보 피처
      - feature_namespace: "product_details"
        features: ["price", "category", "brand"]
      
      # 세션 행동 피처
      - feature_namespace: "session_summary"
        features: ["time_on_page_seconds", "click_count"]

  # 전처리 설정 (정규화 모델이므로 스케일링 중요)
  preprocessor:
    name: "simple_scaler"
    params:
      criterion_col: null
      # 엔티티 키와 타임스탬프 제외
      exclude_cols: ["user_id", "product_id", "session_id", "event_timestamp"]

  # 데이터 인터페이스 정의
  data_interface:
    task_type: "regression"
    target_col: "target_value"

  # 평가자 설정
  evaluator:
    name: "regression_evaluator"

# 평가 설정
evaluation:
  metrics:
    - "r2_score"
    - "mean_squared_error"
    - "mean_absolute_error"
    - "root_mean_squared_error"
  
  validation:
    method: "train_test_split"
    test_size: 0.2
    random_state: 42

# 💡 사용 예시:
# APP_ENV=dev uv run python main.py train --recipe-file models/regression/ridge_regression 