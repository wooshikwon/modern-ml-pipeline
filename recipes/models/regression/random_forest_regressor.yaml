# Random Forest Regressor - 강력한 앙상블 회귀 모델
# 🌲 해석 가능성과 성능의 완벽한 균형을 제공하는 Random Forest

name: "random_forest_regressor"

model:
  # 직접 동적 import를 통한 Random Forest 회귀기
  class_path: "sklearn.ensemble.RandomForestRegressor"
  
  # 하이퍼파라미터 정의 (Optuna 자동 최적화 지원)
  hyperparameters:
    # 🔥 자동 최적화 범위 - Random Forest 특화 하이퍼파라미터
    n_estimators: {type: "int", low: 50, high: 500}
    max_depth: {type: "int", low: 3, high: 20}
    min_samples_split: {type: "int", low: 2, high: 20}
    min_samples_leaf: {type: "int", low: 1, high: 10}
    max_features: {type: "categorical", choices: ["sqrt", "log2", "auto"]}
    
    # 🔧 고정값 - 항상 동일하게 사용될 파라미터
    random_state: 42
    n_jobs: -1  # 모든 CPU 코어 활용

  # 하이퍼파라미터 튜닝 설정
  hyperparameter_tuning:
    enabled: true
    n_trials: 100
    metric: "neg_mean_squared_error"
    direction: "maximize"

  # 데이터 로더 정의 (Spine 생성)
  loader:
    name: "regression_loader"
    source_uri: "recipes/sql/loaders/user_features.sql"

  # 피처 증강 정의 (Feature Store 기반)
  augmenter:
    type: "feature_store"
    features:
      # 사용자 기본 정보 피처
      - feature_namespace: "user_demographics"
        features: ["age", "country_code"]
      
      # 사용자 구매 이력 피처  
      - feature_namespace: "user_purchase_summary"
        features: ["ltv", "total_purchase_count", "last_purchase_date"]
      
      # 상품 상세 정보 피처
      - feature_namespace: "product_details"
        features: ["price", "category", "brand"]
      
      # 세션 행동 피처
      - feature_namespace: "session_summary"
        features: ["time_on_page_seconds", "click_count"]

  # 전처리 설정
  preprocessor:
    name: "simple_scaler"
    params:
      criterion_col: null
      # 엔티티 키와 타임스탬프 제외
      exclude_cols: ["user_id", "product_id", "session_id", "event_timestamp"]

  # 데이터 인터페이스 정의
  data_interface:
    task_type: "regression"
    target_col: "target_value"

  # 평가자 설정
  evaluator:
    name: "regression_evaluator"

# 평가 설정
evaluation:
  metrics:
    - "r2_score"
    - "mean_squared_error"
    - "mean_absolute_error"
    - "root_mean_squared_error"
  
  validation:
    method: "train_test_split"
    test_size: 0.2
    random_state: 42

# 💡 사용 예시:
# APP_ENV=dev uv run python main.py train --recipe-file models/regression/random_forest_regressor 