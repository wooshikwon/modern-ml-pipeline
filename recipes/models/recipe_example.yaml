# Recipe Example: 완벽한 ML Pipeline 설정 가이드
# 📚 모든 Recipe의 모범이 되는 완전한 구조 예시

name: "recipe_example"

model:
  # ML 모델 클래스 경로 (동적 import)
  class_path: "sklearn.ensemble.RandomForestClassifier"
  
  # Phase 1: Point-in-Time 정합성 스키마
  loader:
    name: "comprehensive_ml_loader"
    source_uri: "recipes/sql/loaders/comprehensive_features.sql"
    entity_schema:
      entity_columns: ["user_id", "product_id", "session_id"]  # Primary Key 조합
      timestamp_column: "event_timestamp"                      # Point-in-Time 기준
  
  # 기존: ML 작업별 세부 설정 (완전히 보존)
  data_interface:
    task_type: "classification"
    target_column: "purchase_decision"    # 타겟 변수
    class_weight: "balanced"              # 클래스 불균형 처리
    average: "weighted"                   # 다중분류 평가 방식
    
  # Dictionary 형태 하이퍼파라미터 (Optuna 호환)
  hyperparameters:
    # 트리 구조 파라미터
    n_estimators: {type: "int", low: 50, high: 500}
    max_depth: {type: "int", low: 3, high: 20}
    min_samples_split: {type: "int", low: 2, high: 20}
    min_samples_leaf: {type: "int", low: 1, high: 10}
    
    # 피처 샘플링
    max_features: {type: "categorical", choices: ["sqrt", "log2", "auto"]}
    
    # 분할 기준
    criterion: {type: "categorical", choices: ["gini", "entropy"]}
    
    # 고정값
    random_state: 42
    n_jobs: -1
    class_weight: "balanced"

  # 하이퍼파라미터 자동 최적화 설정
  hyperparameter_tuning:
    enabled: true
    n_trials: 100                     # Optuna 시행 횟수
    metric: "f1_weighted"            # 최적화 목표 메트릭
    direction: "maximize"            # 최적화 방향
  
  # Feature Store 기반 피처 증강
  augmenter:
    type: "feature_store"
    features:
      # 사용자 인구통계학적 특성
      - feature_namespace: "user_demographics"
        features: ["age", "gender", "location", "education_level", "income_bracket"]
      
      # 사용자 구매 이력
      - feature_namespace: "user_purchase_summary"
        features: ["ltv", "total_purchase_count", "avg_order_value", "last_purchase_date"]
      
      # 제품 정보
      - feature_namespace: "product_details"
        features: ["price", "category", "brand", "rating", "popularity_score"]
      
      # 세션 행동 데이터
      - feature_namespace: "session_summary"
        features: ["time_on_page_seconds", "click_count", "page_views", "bounce_rate"]
      
      # 실시간 컨텍스트
      - feature_namespace: "contextual_features"
        features: ["time_of_day", "device_type", "referral_source", "campaign_id"]

  # 데이터 전처리 설정
  preprocessor:
    name: "classification_preprocessor"
    params:
      criterion_col: null
      exclude_cols: ["user_id", "product_id", "session_id", "event_timestamp", "purchase_decision"]
      handle_missing: "median"        # 결측치 처리 방식
      scale_features: false           # Random Forest는 스케일링 불필요
      encode_categorical: "onehot"    # 범주형 변수 인코딩

  # 평가자 설정
  evaluator:
    name: "classification_evaluator"

# 모델 평가 설정
evaluation:
  metrics:
    - "accuracy"              # 정확도
    - "precision_weighted"    # 가중 정밀도
    - "recall_weighted"       # 가중 재현율
    - "f1_weighted"          # 가중 F1-Score
    - "roc_auc"              # ROC AUC
  
  validation:
    method: "train_test_split"
    test_size: 0.2
    stratify: true            # 타겟 분포 유지
    random_state: 42

# 추가 메타데이터 (선택적)
metadata:
  description: "완벽한 ML Pipeline 설정을 보여주는 종합 예시"
  use_cases:
    - "구매 의도 예측"
    - "고객 세분화"
    - "개인화 추천"
  performance_baseline:
    target_metric: "f1_weighted"
    minimum_score: 0.75
  data_requirements:
    minimum_samples: 10000
    feature_count: "20+"
    time_range: "6개월 이상"
