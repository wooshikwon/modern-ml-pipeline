# T-Learner: Two-Model Approach for Causal Inference
# 📊 Treatment와 Control을 별도 모델로 학습하는 정밀한 접근법

name: "t_learner"

model:
  # CausalML T-Learner 직접 동적 import
  class_path: "causalml.inference.meta.TLearner"
  
  # Phase 1: Point-in-Time 정합성 스키마
  loader:
    name: "treatment_effect_loader"
    source_uri: "recipes/sql/loaders/medical_treatment_effects.sql"
    adapter: sql
    entity_schema:
      entity_columns: ["patient_id"]
      timestamp_column: "treatment_date"
  
  # 기존: ML 작업별 세부 설정 (Causal 전용)
  data_interface:
    task_type: "causal"
    target_column: "conversion_value"        # 전환 가치 (연속형)
    treatment_column: "received_campaign"    # 캠페인 수신 여부 (0/1)
    treatment_value: 1                       # Treatment 그룹 (캠페인 받은 경우)
    
  # Dictionary 형태 하이퍼파라미터 (T-Learner 특화)
  hyperparameters:
    # Base learner로 XGBoost 사용 (T-Learner는 더 복잡한 모델 선호)
    base_learner: "xgboost"
    
    # XGBoost 하이퍼파라미터 자동 최적화
    n_estimators: {type: "int", low: 100, high: 1000}
    learning_rate: {type: "float", low: 0.01, high: 0.3, log: true}
    max_depth: {type: "int", low: 3, high: 15}
    subsample: {type: "float", low: 0.6, high: 1.0}
    colsample_bytree: {type: "float", low: 0.6, high: 1.0}
    
    # 고정값 - 재현성과 성능을 위한 설정
    random_state: 42
    n_jobs: -1
    verbosity: 0

  # 하이퍼파라미터 튜닝 설정
  hyperparameter_tuning:
    enabled: true
    n_trials: 60                    # T-Learner는 2개 모델을 학습하므로 적당히
    metric: "uplift_auc"           # Uplift AUC로 최적화
    direction: "maximize"
  
  # Feature Store 기반 피처 증강
  augmenter:
    type: "feature_store"
    features:
      # 고객 프로필
      - feature_namespace: "customer_profile"
        features: ["age_group", "income_level", "subscription_tier", "geographic_region"]
      
      # 과거 캠페인 반응
      - feature_namespace: "campaign_history"
        features: ["previous_conversions", "avg_response_time", "preferred_channel"]
      
      # 제품 관심도
      - feature_namespace: "product_affinity"
        features: ["category_preferences", "price_sensitivity", "brand_loyalty"]
      
      # 행동 패턴
      - feature_namespace: "behavioral_signals"
        features: ["website_activity", "email_engagement", "social_interaction"]

  # 전처리 설정
  preprocessor:
    name: "causal_preprocessor"
    params:
      criterion_col: null
      exclude_cols: ["customer_id", "campaign_id", "campaign_launch_date", "conversion_value", "received_campaign"]
      handle_missing: "median"
      scale_features: true
      encode_categorical: "onehot"

  # 평가자 설정
  evaluator:
    name: "causal_evaluator"

# 평가 설정
evaluation:
  metrics:
    - "uplift_auc"
    - "uplift_at_k"
    - "qini_coefficient"
    - "treatment_effect"
  
  validation:
    method: "train_test_split"
    test_size: 0.2
    stratify: true
    random_state: 42
