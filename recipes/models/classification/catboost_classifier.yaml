# CatBoost Classifier: 범주형 데이터의 마법사
# 🐈 범주형 변수를 자동으로 완벽하게 처리하는 똑똑한 부스팅

name: "catboost_classifier"

model:
  # CatBoost Classifier 직접 동적 import
  class_path: "catboost.CatBoostClassifier"
  
  # Phase 1: Point-in-Time 정합성 스키마
  loader:
    name: "credit_risk_assessment_loader"
    source_uri: "recipes/sql/loaders/credit_risk_features.sql"
    entity_schema:
      entity_columns: ["applicant_id", "application_id"]  # 신청자-신청서 페어
      timestamp_column: "application_date"                # 신청 날짜
  
  # 기존: ML 작업별 세부 설정 (Classification 전용)
  data_interface:
    task_type: "classification"
    target_column: "credit_approved"      # 신용 승인 여부 (0: 거절, 1: 승인)
    class_weight: "balanced"              # 승인/거절 균형
    average: "weighted"
    
  # Dictionary 형태 하이퍼파라미터 (CatBoost 특화)
  hyperparameters:
    # 부스팅 파라미터
    iterations: {type: "int", low: 100, high: 1500}       # CatBoost는 iterations 사용
    learning_rate: {type: "float", low: 0.01, high: 0.3, log: true}
    depth: {type: "int", low: 4, high: 10}                # CatBoost는 depth 사용
    
    # 정규화
    l2_leaf_reg: {type: "float", low: 1, high: 30}        # L2 정규화
    bagging_temperature: {type: "float", low: 0, high: 1} # 베이지안 부트스트랩
    
    # 범주형 처리 (CatBoost 특화)
    one_hot_max_size: {type: "int", low: 2, high: 25}     # One-hot 임계값
    border_count: {type: "int", low: 32, high: 255}       # 경계 개수
    
    # 고정값
    random_state: 42
    verbose: false                                         # 조용한 실행
    class_weights: [1, 1]                                  # 클래스 가중치

  # 하이퍼파라미터 튜닝 설정
  hyperparameter_tuning:
    enabled: true
    n_trials: 80                      # CatBoost는 안정적이므로 적당히
    metric: "roc_auc"
    direction: "maximize"
  
  # Feature Store 기반 피처 증강
  augmenter:
    type: "feature_store"
    features:
      # 개인 신용 정보
      - feature_namespace: "personal_credit"
        features: ["credit_score", "employment_type", "income_level", "debt_to_income_ratio"]
      
      # 과거 금융 이력
      - feature_namespace: "financial_history"
        features: ["previous_loans", "payment_delays", "bankruptcies", "credit_utilization"]
      
      # 인구통계학적 특성
      - feature_namespace: "demographics"
        features: ["age_group", "education_level", "marital_status", "residence_type"]
      
      # 신청 관련 정보
      - feature_namespace: "application_details"
        features: ["loan_amount", "loan_purpose", "application_channel", "co_signer_present"]

  # 전처리 설정 (CatBoost는 범주형 자동 처리!)
  preprocessor:
    name: "classification_preprocessor"
    params:
      criterion_col: null
      exclude_cols: ["applicant_id", "application_id", "application_date", "credit_approved"]
      handle_missing: "median"
      scale_features: false        # CatBoost는 스케일링 불필요
      encode_categorical: "none"   # CatBoost가 자동으로 범주형 처리!

  # 평가자 설정
  evaluator:
    name: "classification_evaluator"

# 평가 설정
evaluation:
  metrics:
    - "accuracy"
    - "precision_weighted"
    - "recall_weighted"
    - "f1_weighted"
    - "roc_auc"
  
  validation:
    method: "train_test_split"
    test_size: 0.2
    stratify: true
    random_state: 42
