# SVM Classifier: 고차원 데이터의 분류 마스터
# 🎯 커널 트릭으로 복잡한 경계면을 완벽하게 학습

name: "svm_classifier"

model:
  # Scikit-learn SVM Classifier 직접 동적 import
  class_path: "sklearn.svm.SVC"
  
  # Phase 1: Point-in-Time 정합성 스키마
  loader:
    name: "document_classification_loader"
    source_uri: "recipes/sql/loaders/document_features.sql"
    entity_schema:
      entity_columns: ["document_id", "author_id"]     # 문서-작성자 페어
      timestamp_column: "created_datetime"             # 문서 작성 시점
  
  # 기존: ML 작업별 세부 설정 (Classification 전용)
  data_interface:
    task_type: "classification"
    target_column: "document_category"    # 문서 카테고리 (다중분류)
    class_weight: "balanced"              # 클래스 불균형 처리
    average: "weighted"                   # 다중분류 가중 평균
    
  # Dictionary 형태 하이퍼파라미터 (SVM 특화)
  hyperparameters:
    # 커널 설정 (SVM의 핵심)
    kernel: {type: "categorical", choices: ["rbf", "linear", "poly"]}
    
    # 정규화 파라미터
    C: {type: "float", low: 0.1, high: 100.0, log: true}      # 오분류 허용도
    
    # RBF 커널 파라미터
    gamma: {type: "categorical", choices: ["scale", "auto"]}   # 커널 계수
    
    # 다항식 커널 파라미터 (조건부)
    degree: {type: "int", low: 2, high: 5}                    # 다항식 차수
    
    # 확률 출력 활성화
    probability: true
    
    # 고정값
    random_state: 42
    class_weight: "balanced"

  # 하이퍼파라미터 튜닝 설정
  hyperparameter_tuning:
    enabled: true
    n_trials: 60                      # SVM은 학습이 오래 걸림
    metric: "f1_weighted"             # 다중분류에서 F1 가중평균
    direction: "maximize"
  
  # Feature Store 기반 피처 증강
  augmenter:
    type: "feature_store"
    features:
      # 텍스트 통계적 특성
      - feature_namespace: "text_statistics"
        features: ["word_count", "sentence_count", "avg_sentence_length", "lexical_diversity"]
      
      # 문체 분석
      - feature_namespace: "writing_style"
        features: ["formal_words_ratio", "passive_voice_ratio", "technical_terms_count"]
      
      # 토픽 모델링 피처
      - feature_namespace: "topic_features"
        features: ["topic_0_prob", "topic_1_prob", "topic_2_prob", "topic_coherence"]
      
      # 메타데이터
      - feature_namespace: "document_meta"
        features: ["document_type", "language", "source_platform", "edit_count"]

  # 전처리 설정 (SVM은 스케일링 필수!)
  preprocessor:
    name: "classification_preprocessor"
    params:
      criterion_col: null
      exclude_cols: ["document_id", "author_id", "created_datetime", "document_category"]
      handle_missing: "median"
      scale_features: true             # SVM은 반드시 스케일링 필요
      encode_categorical: "onehot"     # One-hot encoding for SVM

  # 평가자 설정
  evaluator:
    name: "classification_evaluator"

# 평가 설정
evaluation:
  metrics:
    - "accuracy"
    - "precision_weighted"
    - "recall_weighted"
    - "f1_weighted"
    - "roc_auc"                        # 다중분류에서는 macro-average
  
  validation:
    method: "train_test_split"
    test_size: 0.2
    stratify: true
    random_state: 42
