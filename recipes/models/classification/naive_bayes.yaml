# Naive Bayes Classifier: 확률의 단순한 아름다움
# 📊 베이즈 정리의 힘으로 불확실성을 명확하게 분류

name: "naive_bayes"

model:
  # Scikit-learn Gaussian Naive Bayes 직접 동적 import
  class_path: "sklearn.naive_bayes.GaussianNB"
  
  # Phase 1: Point-in-Time 정합성 스키마
  loader:
    name: "sms_spam_loader"
    source_uri: "data/sms_spam.csv"
    adapter: storage
    entity_schema:
      entity_columns: ["message"]
      timestamp_column: "timestamp"
  
  # 기존: ML 작업별 세부 설정 (Classification 전용)
  data_interface:
    task_type: "classification"
    target_column: "sentiment"           # 감정 분류 (긍정/부정/중립)
    class_weight: "balanced"             # 감정 클래스 균형
    average: "weighted"
    
  # Dictionary 형태 하이퍼파라미터 (Naive Bayes 특화)
  hyperparameters:
    # 가우시안 나이브 베이즈의 스무딩 파라미터
    var_smoothing: {type: "float", low: 1e-10, high: 1e-8, log: true}
    
    # 사전 확률 설정 (None은 자동 추정)
    priors: null

  # 하이퍼파라미터 튜닝 설정
  hyperparameter_tuning:
    enabled: true
    n_trials: 30                      # Naive Bayes는 매우 단순하므로 적은 trial
    metric: "f1_weighted"
    direction: "maximize"
  
  # Feature Store 기반 피처 증강
  augmenter:
    type: "feature_store"
    features:
      # 텍스트 기반 피처
      - feature_namespace: "text_features"
        features: ["positive_words_count", "negative_words_count", "neutral_words_count", "total_words"]
      
      # 감정 어휘 사전 기반
      - feature_namespace: "sentiment_lexicon"
        features: ["polarity_score", "subjectivity_score", "emotion_intensity", "confidence_score"]
      
      # 언어적 특성
      - feature_namespace: "linguistic_features"
        features: ["exclamation_count", "question_count", "capitalization_ratio", "punctuation_density"]
      
      # 고객 특성
      - feature_namespace: "customer_context"
        features: ["customer_tier", "purchase_history", "previous_feedback_sentiment", "interaction_frequency"]

  # 전처리 설정
  preprocessor:
    name: "classification_preprocessor"
    params:
      criterion_col: null
      exclude_cols: ["feedback_id", "customer_id", "feedback_date", "sentiment"]
      handle_missing: "median"
      scale_features: true             # Gaussian NB는 정규화된 데이터 선호
      encode_categorical: "onehot"     # One-hot encoding

  # 평가자 설정
  evaluator:
    name: "classification_evaluator"

# 평가 설정
evaluation:
  metrics:
    - "accuracy"
    - "precision_weighted"
    - "recall_weighted"
    - "f1_weighted"
    - "roc_auc"                        # 다중분류 ROC AUC
  
  validation:
    method: "train_test_split"
    test_size: 0.2
    stratify: true
    random_state: 42
