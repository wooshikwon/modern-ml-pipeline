# Logistic Regression - 간단하고 해석 가능한 선형 분류기
# 📊 확률적 해석과 빠른 학습의 완벽한 조화

name: "logistic_regression"

model:
  # 직접 동적 import를 통한 Logistic Regression 분류기
  class_path: "sklearn.linear_model.LogisticRegression"
  
  # 하이퍼파라미터 정의 (Optuna 자동 최적화 지원)
  hyperparameters:
    # 🔥 자동 최적화 범위 - Logistic Regression 특화 하이퍼파라미터
    C: {type: "float", low: 0.001, high: 100.0, log: true}
    penalty: {type: "categorical", choices: ["l1", "l2", "elasticnet"]}
    solver: {type: "categorical", choices: ["liblinear", "saga", "lbfgs"]}
    l1_ratio: {type: "float", low: 0.0, high: 1.0}  # elasticnet용
    
    # 🔧 고정값 - 안정성을 위한 필수 설정
    random_state: 42
    max_iter: 1000
    class_weight: "balanced"

  # 하이퍼파라미터 튜닝 설정
  hyperparameter_tuning:
    enabled: true
    n_trials: 80  # 빠른 모델이므로 충분한 탐색
    metric: "roc_auc"
    direction: "maximize"

  # 데이터 로더 정의 (Spine 생성)
  loader:
    name: "classification_loader"
    source_uri: "recipes/sql/loaders/user_features.sql"

  # 피처 증강 정의 (Feature Store 기반)
  augmenter:
    type: "feature_store"
    features:
      # 사용자 기본 정보 피처
      - feature_namespace: "user_demographics"
        features: ["age", "country_code"]
      
      # 사용자 구매 이력 피처  
      - feature_namespace: "user_purchase_summary"
        features: ["ltv", "total_purchase_count", "last_purchase_date"]
      
      # 상품 상세 정보 피처
      - feature_namespace: "product_details"
        features: ["price", "category", "brand"]
      
      # 세션 행동 피처
      - feature_namespace: "session_summary"
        features: ["time_on_page_seconds", "click_count"]

  # 전처리 설정 (선형 모델이므로 스케일링 중요)
  preprocessor:
    name: "simple_scaler"
    params:
      criterion_col: null
      # 엔티티 키와 타임스탬프 제외
      exclude_cols: ["user_id", "product_id", "session_id", "event_timestamp"]

  # 데이터 인터페이스 정의
  data_interface:
    task_type: "classification"
    target_col: "target_class"

  # 평가자 설정
  evaluator:
    name: "classification_evaluator"

# 평가 설정
evaluation:
  metrics:
    - "accuracy"
    - "precision_weighted"
    - "recall_weighted" 
    - "f1_weighted"
    - "roc_auc"
  
  validation:
    method: "train_test_split"
    test_size: 0.2
    stratify: true
    random_state: 42

# 💡 사용 예시:
# APP_ENV=dev uv run python main.py train --recipe-file models/classification/logistic_regression 