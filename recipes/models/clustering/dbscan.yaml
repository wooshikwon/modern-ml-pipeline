# DBSCAN: 밀도 기반 클러스터링의 혁신
# 🔍 노이즈를 자동으로 탐지하며 임의 모양의 클러스터를 발견

name: "dbscan"

model:
  # Scikit-learn DBSCAN 직접 동적 import
  class_path: "sklearn.cluster.DBSCAN"
  
  # Phase 1: 데이터 로딩 설정 (엔티티 스키마 포함)
  loader:
    name: "anomaly_detection_loader"
    source_uri: "data/sensor_data_for_anomaly.csv"
    adapter: storage
    entity_schema:
      entity_columns: ["sensor_id", "timestamp"]
      timestamp_column: "timestamp"
  
  # 기존: ML 작업별 세부 설정 (Clustering 전용)
  data_interface:
    task_type: "clustering"
    n_clusters: null                    # DBSCAN은 클러스터 수를 자동 결정
    
  # Dictionary 형태 하이퍼파라미터 (DBSCAN 특화)
  hyperparameters:
    # 밀도 파라미터 (DBSCAN의 핵심)
    eps: {type: "float", low: 0.1, high: 2.0}              # 이웃 거리 임계값
    min_samples: {type: "int", low: 3, high: 20}           # 핵심점 최소 이웃 수
    
    # 거리 계산 방법
    metric: {type: "categorical", choices: ["euclidean", "manhattan", "cosine"]}
    
    # 알고리즘 선택
    algorithm: {type: "categorical", choices: ["auto", "ball_tree", "kd_tree", "brute"]}
    
    # 리프 크기 (트리 알고리즘용)
    leaf_size: {type: "int", low: 10, high: 50}
    
    # 병렬 처리
    n_jobs: -1

  # 하이퍼파라미터 튜닝 설정
  hyperparameter_tuning:
    enabled: true
    n_trials: 40                      # DBSCAN은 상대적으로 적은 trial
    metric: "silhouette_score"        # 실루엣 스코어로 평가
    direction: "maximize"
  
  # Feature Store 기반 피처 증강
  augmenter:
    type: "feature_store"
    features:
      # 구매 행동 패턴
      - feature_namespace: "purchase_behavior"
        features: ["purchase_frequency", "avg_order_value", "recency_days", "monetary_total"]
      
      # 브라우징 패턴
      - feature_namespace: "browsing_patterns"
        features: ["page_views_per_session", "session_duration", "bounce_rate", "device_preference"]
      
      # 제품 선호도
      - feature_namespace: "product_preferences"
        features: ["category_diversity", "brand_loyalty", "price_sensitivity", "seasonal_patterns"]
      
      # 참여도 지표
      - feature_namespace: "engagement_metrics"
        features: ["email_open_rate", "social_interaction", "review_activity", "referral_behavior"]

  # 전처리 설정 (DBSCAN은 스케일링 중요!)
  preprocessor:
    name: "clustering_preprocessor"
    params:
      criterion_col: null
      exclude_cols: ["customer_id", "behavior_period", "analysis_date"]
      handle_missing: "median"
      scale_features: true             # DBSCAN은 거리 기반이므로 스케일링 필수
      encode_categorical: "onehot"

  # 평가자 설정
  evaluator:
    name: "clustering_evaluator"

# 평가 설정
evaluation:
  metrics:
    - "silhouette_score"
    - "calinski_harabasz_score"
    - "davies_bouldin_score"
    - "adjusted_rand_score"           # 외부 평가 지표
  
  validation:
    method: "clustering_validation"   # 클러스터링 전용 검증
    random_state: 42
