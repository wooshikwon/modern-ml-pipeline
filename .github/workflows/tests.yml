name: Test Suite

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install pytest pytest-cov pytest-xdist

    - name: Run unit tests
      run: pytest tests/unit -n auto --cov=src --cov-report=xml --cov-report=term-missing

    - name: Run integration tests
      run: pytest tests/integration -n 4 --cov=src --cov-append --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
        verbose: true

    - name: Performance check
      run: |
        start_time=$(date +%s)
        pytest tests/ -n auto -q
        end_time=$(date +%s)
        duration=$((end_time - start_time))
        echo "Test execution time: ${duration}s"
        if [ $duration -gt 600 ]; then
          echo "❌ Test execution exceeded 10 minutes"
          exit 1
        fi
        echo "✅ Performance target met"

  # Separate job for v2 context pilot tests
  v2_pilot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Run v2 context tests
        run: |
          pytest -q tests/integration/test_mlflow_integration.py::TestMLflowIntegration::test_mlflow_experiment_creation_and_tracking_v2
          pytest -q tests/integration/test_mlflow_integration.py::TestMLflowIntegration::test_mlflow_model_logging_and_registration_v2
          pytest -q tests/integration/test_mlflow_integration.py::TestMLflowIntegration::test_mlflow_artifact_logging_and_retrieval_v2
          pytest -q tests/integration/test_mlflow_integration.py::TestMLflowIntegration::test_mlflow_artifact_equivalence_old_vs_new
          pytest -q tests/integration/test_mlflow_integration.py::TestMLflowIntegration::test_mlflow_metrics_keys_match_baseline_v2
          pytest -q tests/integration/test_component_interactions.py::TestComponentDataFlowValidation::test_adapter_to_model_data_flow_integration_v2
          pytest -q tests/integration/test_database_integration.py::TestDatabaseIntegration::test_sql_adapter_read_v2