version: '3.8'

services:
  {PROJECT_NAME}:
    build: .
    container_name: {PROJECT_NAME}-app
    ports:
      - "${PORT:-8000}:8000"
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./sql:/app/sql
      - ./configs:/app/configs
      - ./recipes:/app/recipes
      - ./artifacts:/app/artifacts
      - ./mlruns:/app/mlruns
    networks:
      - {PROJECT_NAME}-network
    depends_on:
      - db
      - redis
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: {PROJECT_NAME}-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mlflow}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - {PROJECT_NAME}-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: {PROJECT_NAME}-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - {PROJECT_NAME}-network
    restart: unless-stopped
    command: redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}

  mlflow:
    image: python:3.11-slim
    container_name: {PROJECT_NAME}-mlflow
    ports:
      - "5000:5000"
    environment:
      MLFLOW_BACKEND_STORE_URI: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-mlflow}
    volumes:
      - ./mlruns:/mlruns
    networks:
      - {PROJECT_NAME}-network
    depends_on:
      - db
    restart: unless-stopped
    command: >
      bash -c "
        pip install mlflow psycopg2-binary &&
        mlflow server 
          --backend-store-uri postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-mlflow}
          --default-artifact-root /mlruns
          --host 0.0.0.0
          --port 5000
      "

volumes:
  postgres_data:
  redis_data:

networks:
  {PROJECT_NAME}-network:
    driver: bridge

# External services connection (when using mmp-local-dev)
# Uncomment and modify if you want to connect to external mmp-local-dev services
# networks:
#   default:
#     external: true
#     name: mmp-local-dev_default