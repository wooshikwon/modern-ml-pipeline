# PROD 환경 설정 - 운영 환경
environment:
  app_env: "prod"
  gcp_project_id: "{{ prod_gcp_project | default('prod-project') }}"
  
  production:
    enable_debug_mode: false
    enable_profiling: {{ enable_profiling | default('false') }}
    save_intermediate: false

# 데이터 어댑터 설정 - 운영 환경
data_adapters:
  default_loader: "sql"
  default_storage: "storage"
  default_feature_store: "feature_store"
  
  adapters:
    sql:
      class_name: SqlAdapter
      config:
        connection_uri: "{{ prod_db_uri | default('postgresql://prod_user:${PROD_DB_PASSWORD}@prod-db:5432/prod_ml') }}"
        pool_size: {{ db_pool_size | default('20') }}
        max_overflow: {{ db_max_overflow | default('10') }}
    
    storage:
      class_name: StorageAdapter
      config:
        storage_options:
          project: "{{ prod_gcp_project | default('prod-project') }}"
          token: "${GCS_PROD_SERVICE_ACCOUNT}"
    
    feature_store:
      class_name: FeastAdapter
      config: {}

# Feature Store 설정 - 운영 환경
feature_store:
  provider: "feast"
  feast_config:
    project: "{{ project_name | default('ml_pipeline_prod') }}"
    provider: "gcp"
    registry: "gs://{{ prod_bucket | default('ml-prod-bucket') }}/feature_store/prod_registry.sqlite"
    
    offline_store:
      type: "bigquery"
      project_id: "{{ prod_gcp_project | default('prod-project') }}"
      dataset_id: "{{ bq_dataset | default('prod_feature_store') }}"
      location: "{{ bq_location | default('US') }}"
    
    online_store:
      type: "redis"
      connection_string: "{{ prod_redis_uri | default('redis://:${REDIS_PASSWORD}@prod-redis:6379') }}"
      ssl: {{ redis_ssl | default('true') }}

# MLflow 설정 - 운영 환경
mlflow:
  tracking_uri: "{{ prod_mlflow_uri | default('https://mlflow-prod.company.com') }}"
  experiment_name: "{{ experiment_name | default('Production-Models') }}"

# 하이퍼파라미터 튜닝 - 운영 환경
hyperparameter_tuning:
  enabled: {{ enable_hyperparameter_tuning | default('true') }}
  timeout: {{ tuning_timeout | default('3600') }}  # 1시간
  engine: "optuna"
  
  pruning:
    enabled: true
    algorithm: "MedianPruner"
    n_startup_trials: 10
    n_warmup_steps: 50
  
  parallelization:
    n_jobs: {{ tuning_n_jobs | default('16') }}

# API 서빙 - 운영 환경
serving:
  enabled: {{ serving_enabled | default('true') }}
  model_stage: "Production"
  host: "{{ serving_host | default('0.0.0.0') }}"
  port: {{ serving_port | default('8080') }}
  workers: {{ serving_workers | default('4') }}
  timeout: {{ serving_timeout | default('60') }}

# 아티팩트 저장소 - 클라우드 스토리지
artifact_stores:
  augmented_dataset:
    enabled: true
    base_uri: "gs://{{ prod_bucket | default('ml-prod-bucket') }}/artifacts/augmented"
  
  preprocessed_dataset:
    enabled: false  # 운영에서는 비활성화
  
  prediction_results:
    enabled: true
    base_uri: "gs://{{ prod_bucket | default('ml-prod-bucket') }}/artifacts/predictions"
    
    postgres_storage:
      enabled: {{ enable_postgres_storage | default('true') }}
      table_name: "prod_predictions"
      connection_uri: "{{ prod_db_uri | default('postgresql://prod_user:${PROD_DB_PASSWORD}@prod-db:5432/prod_ml') }}"

# 모니터링 - 운영 환경
monitoring:
  enable_metrics: true
  enable_logging: true
  
  alerts:
    enable_slack_notifications: {{ enable_slack_alerts | default('true') }}
    slack_channel: "{{ slack_channel | default('#ml-prod-alerts') }}"
    error_threshold: {{ error_threshold | default('0.01') }}  # 1% 에러율

# 보안 설정
security:
  enable_ssl: {{ enable_ssl | default('true') }}
  cert_path: "{{ ssl_cert_path | default('/etc/ssl/certs/ml-pipeline.crt') }}"
  key_path: "{{ ssl_key_path | default('/etc/ssl/private/ml-pipeline.key') }}"