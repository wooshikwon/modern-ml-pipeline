[project]
name = "{{ project_name }}"
version = "0.1.0"
description = "ML Pipeline project generated with Modern ML Pipeline"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # 핵심 프레임워크
    "modern-ml-pipeline>=0.2.0",
    
    # 데이터 처리
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "pyarrow>=13.0.0",  # Parquet 지원
    
    # 기본 ML
    "scikit-learn>=1.3.0",
    
    # Gradient Boosting 모델들 (필수)
    "xgboost>=2.0.0",
    "lightgbm>=4.0.0", 
    "catboost>=1.2.0",
    
    # MLOps & 실험 추적
    "mlflow>=2.8.0",
    
    # CLI & 설정
    "typer>=0.9.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "PyYAML>=6.0",
    "python-dotenv>=1.0.0",
    "jinja2>=3.1.0",  # 템플릿 엔진
    
    # 하이퍼파라미터 튜닝
    "optuna>=3.4.0",
    
    # API 서빙
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    
    # 데이터베이스 연결
    "psycopg2-binary>=2.9.0",  # PostgreSQL
    "sqlalchemy>=2.0.0",
    
    # 클라우드 스토리지
    "fsspec>=2023.9.0",  # 파일시스템 추상화
    "s3fs>=2023.9.0",    # S3 지원
    "gcsfs>=2023.9.0",   # GCS 지원
]

[project.optional-dependencies]
# 고급 ML 모델들
deep-learning = [
    "torch>=2.1.0",
    "pytorch-tabnet>=4.1.0",
    "rtdl-revisiting-models>=0.0.4",  # FT-Transformer
]

# BigQuery 지원
bigquery = [
    "google-cloud-bigquery>=3.12.0",
    "google-cloud-bigquery-storage>=2.22.0",
    "db-dtypes>=1.1.1",  # BigQuery 데이터 타입
]

# Feature Store 연동
feature-store = [
    "feast>=0.34.0",
]

# 시계열 모델
timeseries = [
    "statsmodels>=0.14.0",  # ARIMA
    "prophet>=1.1.4",       # Prophet (선택)
]

# 인과추론
causal = [
    "econml>=0.15.0",
    "dowhy>=0.11.0",
]

# 전체 패키지 (개발용)
all = [
    "modern-ml-pipeline[deep-learning,bigquery,feature-store,timeseries,causal]",
]

# 개발 도구
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
mmp = "modern_ml_pipeline.cli.main_commands:app"

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "W", "B", "C4", "UP"]
ignore = ["E501", "B008", "B904"]

[tool.black]
line-length = 100
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = "-v --cov=src --cov-report=term-missing"