[project]
name = "{{ project_name }}"
version = "0.1.0"
description = "ML Pipeline project powered by Modern ML Pipeline"
readme = "README.md"
requires-python = ">=3.11"

# 🔴 필수 의존성 - 핵심 기능만
dependencies = [
    # Modern ML Pipeline Framework (기본 설치)
    "modern-ml-pipeline>=0.2.0",
]

# 🟡 선택적 의존성 - 사용자가 필요한 것만 선택
[project.optional-dependencies]

# 기본 ML 워크플로우 (대부분 사용자가 필요)
standard = [
    # 데이터 처리
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "pyarrow>=13.0.0",  # Parquet 지원
    
    # 기본 ML
    "scikit-learn>=1.3.0",
    
    # Gradient Boosting
    "xgboost>=2.0.0",
    "lightgbm>=4.0.0",
    "catboost>=1.2.0",
    
    # MLOps
    "mlflow>=2.8.0",
    
    # API 서빙
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
]

# 클라우드 스토리지
storage = [
    "fsspec>=2023.9.0",
    "s3fs>=2023.9.0",     # AWS S3
    "gcsfs>=2023.9.0",    # Google Cloud Storage
    "adlfs>=2023.9.0",    # Azure Data Lake
]

# 데이터베이스 연결
databases = [
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",  # PostgreSQL
    "pymysql>=1.1.0",          # MySQL
    "redis>=5.0.0",            # Redis
]

# BigQuery 전용
bigquery = [
    "google-cloud-bigquery>=3.12.0",
    "google-cloud-bigquery-storage>=2.22.0",
    "db-dtypes>=1.1.1",
]

# Feature Store
feature-store = [
    "feast>=0.34.0",
    "redis>=5.0.0",  # Feast online store
]

# 딥러닝 모델
deep-learning = [
    "torch>=2.1.0",
    "pytorch-tabnet>=4.1.0",
    "rtdl-revisiting-models>=0.0.4",  # FT-Transformer
]

# 시계열 분석
timeseries = [
    "statsmodels>=0.14.0",  # ARIMA
    "prophet>=1.1.4",       # Facebook Prophet
]

# 인과추론
causal = [
    "econml>=0.15.0",
    "dowhy>=0.11.0",
]

# 하이퍼파라미터 튜닝
tuning = [
    "optuna>=3.4.0",
    "optuna-dashboard>=0.14.0",  # 웹 대시보드
]

# 전체 설치 (모든 기능)
all = [
    "{{ project_name }}[standard,storage,databases,bigquery,feature-store,deep-learning,timeseries,causal,tuning]",
]

# 개발 도구
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.5.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
# UV 패키지 매니저 설정
dev-dependencies = [
    "ipykernel>=6.0.0",
    "jupyter>=1.0.0",
]

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "W", "B", "C4", "UP"]
ignore = ["E501", "B008", "B904"]

[tool.black]
line-length = 100
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = "-v --cov=src --cov-report=term-missing"