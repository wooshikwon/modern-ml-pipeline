# =============================================================================
# .env - Modern ML Pipeline 환경변수 설정
# =============================================================================
# 
# 🎯 이 파일은 modern-ml-pipeline init 명령어로 생성되었습니다.
# 필요한 환경변수의 값을 설정하고 사용하세요.
#
# ⚠️  중요: 이 파일은 .gitignore에 포함되어 있습니다 (안전함)
# 
# 📋 현재 환경: {{ environment }}
# =============================================================================

# 🏠 실행 환경
APP_ENV={{ environment }}

{% if environment == 'local' %}
# =============================================================================
# 📊 MLflow 설정 (로컬 모드 - 기본 설정)
# =============================================================================

# 로컬 파일 모드 사용 (./mlruns 디렉토리)
# MLFLOW_TRACKING_URI=./mlruns

# 실험명 (선택사항)
# MLFLOW_EXPERIMENT_NAME=My-Local-Experiments

# =============================================================================
# 💡 로컬 모드 사용법:
# =============================================================================
# 
# 1. 데이터 준비: data/ 디렉토리에 CSV 또는 Parquet 파일 배치
# 2. 학습 실행: modern-ml-pipeline train --recipe-file recipes/classification.yaml  
# 3. 결과 확인: MLflow UI 자동 실행됨 (브라우저에서 접속 URL 확인)
#
# 외부 서버 연결이 필요한 경우 아래 섹션의 주석을 해제하세요.
#
# =============================================================================

{% elif environment == 'dev' %}
# =============================================================================
# 📊 MLflow 설정 (개발 환경)
# =============================================================================

# mmp-local-dev 연동 (기본값)
MLFLOW_TRACKING_URI=http://localhost:5002

# 실험명
MLFLOW_EXPERIMENT_NAME=Dev-Team-Experiments

# =============================================================================
# 🐘 PostgreSQL 연결 (mmp-local-dev)
# =============================================================================

POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=mluser
POSTGRES_PASSWORD=secure_password_123
POSTGRES_DB=mlpipeline

# =============================================================================
# ⚡ Redis 연결 (mmp-local-dev)
# =============================================================================

REDIS_HOST=localhost
REDIS_PORT=6379

# =============================================================================
# 🍽️ Feast Feature Store 설정
# =============================================================================

FEAST_PROJECT=modern_ml_pipeline
FEATURE_STORE_REDIS_HOST=localhost
FEATURE_STORE_REDIS_PORT=6380
FEAST_REGISTRY_PATH=../mmp-local-dev/feast/feature_repo/registry.db

{% elif environment == 'prod' %}
# =============================================================================
# 🚀 프로덕션 환경 설정
# =============================================================================

# MLflow 프로덕션 서버
MLFLOW_TRACKING_URI=https://your-mlflow-server.company.com

# 실험명 (프로덕션 모델 관리)
MLFLOW_EXPERIMENT_NAME=Production-Models

# =============================================================================
# 🏢 클라우드 인프라 연결 (아래 중 하나 선택)
# =============================================================================

# Google Cloud Platform (BigQuery + GCS)
GCP_PROJECT_ID=your-ml-project
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json
BIGQUERY_DATASET=ml_pipeline_production
GCS_BUCKET=your-ml-artifacts-bucket

# Amazon Web Services (선택사항 - GCP 대신)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_REGION=us-east-1
# S3_BUCKET=your-ml-data-bucket

# Microsoft Azure (선택사항 - GCP 대신)
# AZURE_STORAGE_ACCOUNT=your-storage-account
# AZURE_STORAGE_KEY=your-storage-key

# =============================================================================
# 🗄️ 프로덕션 데이터베이스
# =============================================================================

# PostgreSQL (Cloud SQL, RDS, Azure Database 등)
POSTGRES_HOST=your-db-server.com
POSTGRES_PORT=5432
POSTGRES_USER=ml-service-account
POSTGRES_PASSWORD=your-secure-db-password
POSTGRES_DB=ml_production

# =============================================================================
# ⚡ Redis 클러스터 (고가용성)
# =============================================================================

REDIS_HOST=your-redis-cluster.com
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password

# =============================================================================
# 🍽️ Feast Feature Store (프로덕션)
# =============================================================================

FEAST_PROJECT=modern_ml_pipeline_prod
FEAST_REGISTRY_TYPE=sql
FEAST_REGISTRY_PATH=postgresql://ml-service-account:your-secure-db-password@your-db-server.com:5432/ml_production
FEATURE_STORE_REDIS_HOST=your-redis-cluster.com
FEATURE_STORE_REDIS_PORT=6379

{% endif %}

# =============================================================================
# 🔧 고급 설정
# =============================================================================

# 로그 레벨
LOG_LEVEL=INFO

# 병렬 처리 설정 (CPU 코어 수에 맞게 조정)
{% if environment == 'local' %}
N_JOBS=1
{% elif environment == 'dev' %}
N_JOBS=2
{% else %}
N_JOBS=4
{% endif %}

{% if environment == 'prod' %}
# =============================================================================
# 🔒 프로덕션 보안 설정
# =============================================================================

# API 보안 (필수)
# API_SECRET_KEY=your-32-character-secret-key
# JWT_SECRET_KEY=your-jwt-secret-for-authentication

# 모니터링 (권장)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
# DATADOG_API_KEY=your-datadog-api-key

# 알림 설정
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/webhook/url
# PAGERDUTY_API_KEY=your-pagerduty-integration-key

{% endif %}

# =============================================================================
# 💡 다음 단계:
# =============================================================================
{% if environment == 'local' %}
#
# 1. 데이터 준비: data/ 디렉토리에 학습용 데이터 파일 추가
# 2. 학습 시작: modern-ml-pipeline train --recipe-file recipes/{{ recipe_type }}.yaml
# 3. 결과 확인: MLflow UI가 자동으로 열림
#
{% elif environment == 'dev' %}
#
# 1. mmp-local-dev 시작: cd ../mmp-local-dev && docker-compose up -d
# 2. 연결 확인: modern-ml-pipeline self-check
# 3. 학습 시작: modern-ml-pipeline train --recipe-file recipes/{{ recipe_type }}.yaml
#
{% elif environment == 'prod' %}
#
# 1. 클라우드 인증 설정 완료 (GCP/AWS/Azure 서비스 계정)
# 2. 연결 테스트: modern-ml-pipeline self-check --actionable
# 3. 프로덕션 모델 학습: modern-ml-pipeline train --recipe-file recipes/{{ recipe_type }}.yaml
#
{% endif %}
# =============================================================================